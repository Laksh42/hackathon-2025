version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_DOCKER=true
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
    depends_on:
      - backend
      - recommender
      - understander
      - auth
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "5050:5050"
    volumes:
      - ./backend:/app/backend
      - ./config.json:/app/config.json
    environment:
      - CONFIG_PATH=/app/config.json
      - PYTHONPATH=/app
    depends_on:
      news_analysis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  recommender:
    build:
      context: .
      dockerfile: Dockerfile.recommender
    ports:
      - "5051:5051"
    volumes:
      - ./recommender:/app/recommender
      - ./config.json:/app/config.json
    environment:
      - CONFIG_PATH=/app/config.json
      - PYTHONPATH=/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5051/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # News Analysis Service
  news_analysis:
    build:
      context: .
      dockerfile: Dockerfile.news_analysis
    ports:
      - "5055:5055"
    volumes:
      - ./news_analysis:/app/news_analysis
      - ./ai_utils:/app/ai_utils
      - ./config.json:/app/config.json
    environment:
      - CONFIG_PATH=/app/config.json
      - PYTHONPATH=/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5055/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  understander:
    build:
      context: .
      dockerfile: Dockerfile.understander
    ports:
      - "5052:5052"
    volumes:
      - ./understander:/app/understander
      - ./ai_utils:/app/ai_utils
      - ./config.json:/app/config.json
    environment:
      - CONFIG_PATH=/app/config.json
      - PYTHONPATH=/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5052/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  auth:
    build: ./auth
    ports:
      - "5053:5053"
    volumes:
      - ./auth:/app
    environment:
      - PORT=5053
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/financial_assistant
      - JWT_SECRET=your_jwt_secret_key_change_in_production
      - DEBUG=true
    depends_on:
      - postgres
    networks:
      - app-network

  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=financial_assistant
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
  default:
    name: financial-assistant-network